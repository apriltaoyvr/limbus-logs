generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URI_DEV")
}

model abnormalities {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String        @default("Abnormality")
  classCode       String?       @default("UNDEF.") @map("class_code")
  image           String?
  riskLevel       RiskLevelEnum @default(ZAYIN) @map("risk_level")
  riskLevelNumber Int?          @default(0) @map("risk_level_number")
  createdAt       DateTime?     @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt       DateTime?     @default(now()) @map("updated_at") @db.Timestamp(6)
  logs            logs[]

  @@map("Abnormalities")
}

model comments {
  id       String  @id(map: "comment_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  text     String
  sinnerId String  @map("sinner_id")
  logId    String  @map("log_id") @db.Uuid
  logs     logs    @relation(fields: [logId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "comments_log_id_fkey")
  sinner   sinners @relation(fields: [sinnerId], references: [id], onUpdate: NoAction, map: "comments_sinner_id_fkey")
  order    Int?    @default(0)

  @@map("Comments")
}

model logs {
  id               String         @id(map: "log_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  observationLevel Int            @default(0) @map("observation_level")
  text             String
  sinnerId         String         @map("sinner_id")
  abnormalityId    String?        @map("abnormality_id") @db.Uuid
  comments         comments[]
  abnormality      abnormalities? @relation(fields: [abnormalityId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "logs_abnormality_id_fkey")
  sinner           sinners        @relation(fields: [sinnerId], references: [id], onUpdate: NoAction, map: "logs_sinner_id_fkey")

  @@map("Logs")
}

model sinners {
  id       String     @id(map: "sinner_pkey")
  name     String
  comments comments[]
  logs     logs[]

  @@map("Sinners")
}

enum RiskLevelEnum {
  ZAYIN
  TETH
  HE
  WAW
  ALEPH
  UNKNOWN

  @@map("risk_level_enum")
}
